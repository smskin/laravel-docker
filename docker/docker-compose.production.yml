services:
  platform:
    labels:
      - traefik.enable=false
  app:
    labels:
      - traefik.enable=false
  php-fpm:
    restart: always
    labels:
      - traefik.enable=false
    volumes:
      - laravel-app:/var/www/html/storage/app
      - laravel-log:/var/www/html/storage/logs
  nginx:
    restart: always
    labels:
      - traefik.enable=true
      - traefik.http.services.${COMPOSE_PROJECT_NAME}.loadbalancer.server.port=80
      - traefik.docker.network=traefik-net

      - traefik.http.routers.${COMPOSE_PROJECT_NAME}.entrypoints=web
      - traefik.http.routers.${COMPOSE_PROJECT_NAME}.rule=Host(`${NGINX_TRAEFIK_DOMAIN}`)

      - traefik.http.routers.${COMPOSE_PROJECT_NAME}-secure.entrypoints=websecure
      - traefik.http.routers.${COMPOSE_PROJECT_NAME}-secure.rule=Host(`${NGINX_TRAEFIK_DOMAIN}`)
      - traefik.http.routers.${COMPOSE_PROJECT_NAME}-secure.tls=true
      - traefik.http.routers.${COMPOSE_PROJECT_NAME}-secure.tls.certresolver=myresolver
      - traefik.http.routers.${COMPOSE_PROJECT_NAME}-secure.service=${COMPOSE_PROJECT_NAME}
      - traefik.http.routers.${COMPOSE_PROJECT_NAME}-secure.priority=2

      - traefik.http.middlewares.${COMPOSE_PROJECT_NAME}-https-redirect.redirectscheme.scheme=https
      - traefik.http.routers.${COMPOSE_PROJECT_NAME}.middlewares=${COMPOSE_PROJECT_NAME}-https-redirect
    networks:
      - traefik-net
  supervisor:
    restart: always
    labels:
      - traefik.enable=false
    volumes:
      - laravel-app:/var/www/html/storage/app
      - laravel-log:/var/www/html/storage/logs
  redis:
    restart: always
    labels:
      - traefik.enable=false
volumes:
  laravel-app:
  laravel-log:
networks:
  traefik-net:
    external: true
